name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  ruby:
    name: Ruby ${{ matrix.ruby }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby:
          - '3.1.2'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true

    - name: Lint
      run: bundle exec rake standard

    - name: Test
      run: bundle exec rake test

  go:
    name: ${{ matrix.os }} Go ${{ matrix.go }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        go:
          - '1.18'
          - '1.19'
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}
        cache: true

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      # skiping because I can't figure out how to get past this error:
      # level=error msg="Running error: 1 error occurred:\n\t* can't run linter goanalysis_metalinter: 
      # buildir: failed to load package internal: could not load export data: 
      # no export data for \"github.com/google/go-tpm-tools/simulator/internal\"\n\n"
      if: runner.os == 'Windows

      
    - name: Test
      # suppress cgo warnings (c is only used for the tpm simulator)
      run: CGO_CFLAGS='-w' go test $(go list ./... | grep -v cross_language_tests) -race

  cross:
    name: Cross -- Go ${{ matrix.go }} Ruby ${{ matrix.ruby }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - '1.18'
          - '1.19'
        ruby:
          - '3.1.2'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go }}
        cache: true
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
    - name: Cross Language Tests
      # ruby bundler leaves a `vendor` director here, which confuses go mod, so we need to explicitly disable it.
      run:
        bundle exec go test ./cross_language_tests/... -mod=mod

  mergeable:
    runs-on: ubuntu-latest
    steps:
      - run: true
    needs:
      - ruby
      - go
      - cross
